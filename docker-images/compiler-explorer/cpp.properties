# Default settings for C++
compilers=&gcc:&clang

group.gcc.compilers=g11:g12:g13:gdefault
group.gcc.compilerCategories=gcc
compiler.g11.exe=/usr/bin/g++-11
compiler.g11.name=g++ 11.x
compiler.g12.exe=/usr/bin/g++-12
compiler.g12.name=g++ 12.x
compiler.g13.exe=/usr/bin/g++-13
compiler.g13.name=g++ 13.x
compiler.gdefault.exe=/usr/bin/g++-13
compiler.gdefault.name=g++ default (13.x)

group.clang.compilers=clang15:clang15x86:clang16:clang16x86:clang17:clang17x86:clang18:clang18x86:clangdefault
group.clang.intelAsm=-mllvm --x86-asm-syntax=intel
group.clang.compilerType=clang
group.clang.compilerCategories=clang
compiler.clang15.exe=/usr/bin/clang++-15
compiler.clang15.name=clang 15.x
compiler.clang15x86.exe=/usr/bin/clang++-15
compiler.clang15x86.name=clang 15.x x86
compiler.clang15x86.options=-m32 -march=i386
compiler.clang16.exe=/usr/bin/clang++-16
compiler.clang16.name=clang 16.x
compiler.clang16x86.exe=/usr/bin/clang++-16
compiler.clang16x86.name=clang 16.x x86
compiler.clang16x86.options=-m32 -march=i386
compiler.clang17.exe=/usr/bin/clang++-17
compiler.clang17.name=clang 17.x
compiler.clang17x86.exe=/usr/bin/clang++-17
compiler.clang17x86.name=clang 17.x x86
compiler.clang17x86.options=-m32 -march=i386
compiler.clang18.exe=/usr/bin/clang++-18
compiler.clang18.name=clang 18.x
compiler.clang18x86.exe=/usr/bin/clang++-18
compiler.clang18x86.name=clang 18.x x86
compiler.clang18x86.options=-m32 -march=i386
compiler.clangdefault.exe=/usr/bin/clang++-18
compiler.clangdefault.name=clang default (18.x)

tools=clangquerydefault:clangtidydefault:clangquery15:clangquery16:clangquery17:clangquery18:strings:ldd:readelf:nm

tools.clangquerydefault.exe=/usr/bin/clang-query-17
tools.clangquerydefault.name=clang-query default (17.x)
tools.clangquerydefault.type=independent
tools.clangquerydefault.class=clang-query-tool
tools.clangquerydefault.stdinHint=Query commands
tools.clangquerydefault.monacoStdin=true

tools.clangtidydefault.exe=/usr/bin/clang-tidy-17
tools.clangtidydefault.name=clang-tidy default (17.x)
tools.clangtidydefault.type=independent
tools.clangtidydefault.class=clang-tidy-tool
tools.clangtidydefault.stdinHint=disabled

tools.clangquery15.exe=/usr/bin/clang-query-15
tools.clangquery15.name=clang-query 15
tools.clangquery15.type=independent
tools.clangquery15.class=clang-query-tool
tools.clangquery15.stdinHint=Query commands

tools.clangquery16.exe=/usr/bin/clang-query-16
tools.clangquery16.name=clang-query 16
tools.clangquery16.type=independent
tools.clangquery16.class=clang-query-tool
tools.clangquery16.stdinHint=Query commands

tools.clangquery17.exe=/usr/bin/clang-query-17
tools.clangquery17.name=clang-query 17
tools.clangquery17.type=independent
tools.clangquery17.class=clang-query-tool
tools.clangquery17.stdinHint=Query commands

tools.clangquery18.exe=/usr/bin/clang-query-18
tools.clangquery18.name=clang-query 18
tools.clangquery18.type=independent
tools.clangquery18.class=clang-query-tool
tools.clangquery18.stdinHint=Query commands

tools.ldd.name=ldd
tools.ldd.exe=/usr/bin/ldd
tools.ldd.type=postcompilation
tools.ldd.class=readelf-tool
tools.ldd.exclude=djggp
tools.ldd.stdinHint=disabled

tools.readelf.name=readelf (default)
tools.readelf.exe=/usr/bin/readelf
tools.readelf.type=postcompilation
tools.readelf.class=readelf-tool
tools.readelf.exclude=djggp
tools.readelf.stdinHint=disabled

tools.nm.name=nm (default)
tools.nm.exe=/usr/bin/nm
tools.nm.type=postcompilation
tools.nm.class=nm-tool
tools.nm.exclude=djggp
tools.nm.stdinHint=disabled

tools.strings.exe=/usr/bin/strings
tools.strings.name=strings
tools.strings.type=postcompilation
tools.strings.class=strings-tool
tools.strings.exclude=djggp
tools.strings.stdinHint=disabled

defaultCompiler=gdefault
postProcess=
demangler=c++filt
demanglerType=cpp
objdumper=objdump
#androidNdk=/opt/google/android-ndk-r9c
options=
supportsBinary=true
supportsBinaryObject=true
binaryHideFuncRe=^(__.*|_(init|start|fini)|(de)?register_tm_clones|call_gmon_start|frame_dummy|\.plt.*|_dl_relocate_static_pie)$
needsMulti=false
stubRe=\bmain\b
stubText=int main(void){return 0;/*stub provided by Compiler Explorer*/}
supportsLibraryCodeFilter=true

#################################
#################################
# Installed libs (See c++.amazon.properties for a scheme of libs group)
libs=
